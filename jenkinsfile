node {
    // reference to maven
    // ** NOTE: This 'maven-3.6.1' Maven tool must be configured in the Jenkins Global Configuration.   
    
    environment {
      version = "0.0.1"
    }

    // holds reference to docker image
    def dockerImage
    def version = "0.0.1"
    // ip address of the docker private repository(nexus)
    
    def dockerRepoUrl = "hsassa"
    def dockerImageName = "back-auth"
    def dockerImageTag = "${dockerRepoUrl}/${dockerImageName}:${version}"
    
    stage('Clone Repo') { // for display purposes
      // Get some code from a GitHub repository
      git 'https://github.com/shicham/back-auth.git'
      // Get the Maven tool.
      // ** NOTE: This 'maven-3.6.1' Maven tool must be configured
      // **       in the global configuration.           
      
    }    
  
    stage('Build Project') {
      // build project via maven
      sh "sudo mvn -Dmaven.test.failure.ignore clean package"
    }
	
	stage('Publish Tests Results'){
      parallel(
        publishJunitTestsResultsToJenkins: {
          echo "Publish junit Tests Results"
		  junit '**/target/surefire-reports/TEST-*.xml'
		  archive 'target/*.jar'
        },
        publishJunitTestsResultsToSonar: {
          echo "This is branch b"
      })
    }
		
    stage('Build Docker Image') {
      // build docker image
      sh "whoami"
      sh "pwd"
      sh "ls -all /var/run/docker.sock"
      //sh "sudo mkdir data"
      sh "sudo cp target/${dockerImageName}*.jar data/" 
      //sh "sudo docker build -t erk-server ."
      dockerImage = docker.build("${dockerImageName}")
    }
   
    stage('Deploy Docker Image'){
      
      // deploy docker image to nexus

      echo "Docker Image Tag Name: ${dockerImageTag}"

      sh "docker login -u hsassa -p bismilah@123"
      sh "docker tag ${dockerImageName} ${dockerImageTag}"
      sh "docker push ${dockerImageTag}"
      sh "cd /home/ubuntu/projects/crm/deploy/back/"
      //sh "/home/ubuntu/projects/crm/deploy/back/start.sh"
      sh "sudo nohup /home/ubuntu/projects/crm/deploy/back/crm/${dockerImageName}.sh ${version} &"
    }
}
